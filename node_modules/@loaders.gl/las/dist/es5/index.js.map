{"version":3,"sources":["../../src/index.ts"],"names":["LASLoader","LASWorkerLoader","parse","arrayBuffer","options","parseSync","_typecheckLoader"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAEA;;AACA;;;;;;AAUO,IAAMA,SAAS,mCACjBC,oBADiB;AAEpBC,EAAAA,KAAK;AAAA,2EAAE,iBAAOC,WAAP,EAAiCC,OAAjC;AAAA;AAAA;AAAA;AAAA;AAAA,+CACL,uBAASD,WAAT,EAAsBC,OAAtB,CADK;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,KAFe;AAIpBC,EAAAA,SAAS,EAAE,mBAACF,WAAD,EAA2BC,OAA3B;AAAA,WACT,uBAASD,WAAT,EAAsBC,OAAtB,CADS;AAAA;AAJS,EAAf;;;AAQA,IAAME,gBAAkC,GAAGN,SAA3C","sourcesContent":["import type {LoaderWithParser} from '@loaders.gl/loader-utils';\nimport type {LASLoaderOptions} from './las-loader';\nimport {LASLoader as LASWorkerLoader} from './las-loader';\nimport parseLAS from './lib/parse-las';\n\n// LASLoader\n\nexport type {LASLoaderOptions};\nexport {LASWorkerLoader};\n\n/**\n * Loader for the LAS (LASer) point cloud format\n */\nexport const LASLoader = {\n  ...LASWorkerLoader,\n  parse: async (arrayBuffer: ArrayBuffer, options?: LASLoaderOptions) =>\n    parseLAS(arrayBuffer, options),\n  parseSync: (arrayBuffer: ArrayBuffer, options?: LASLoaderOptions) =>\n    parseLAS(arrayBuffer, options)\n};\n\nexport const _typecheckLoader: LoaderWithParser = LASLoader;\n"],"file":"index.js"}