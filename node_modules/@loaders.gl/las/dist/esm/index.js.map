{"version":3,"sources":["../../src/index.ts"],"names":["LASLoader","LASWorkerLoader","parseLAS","parse","arrayBuffer","options","parseSync","_typecheckLoader"],"mappings":"AAEA,SAAQA,SAAS,IAAIC,eAArB,QAA2C,cAA3C;AACA,OAAOC,QAAP,MAAqB,iBAArB;AAKA,SAAQD,eAAR;AAKA,OAAO,MAAMD,SAAS,GAAG,EACvB,GAAGC,eADoB;AAEvBE,EAAAA,KAAK,EAAE,OAAOC,WAAP,EAAiCC,OAAjC,KACLH,QAAQ,CAACE,WAAD,EAAcC,OAAd,CAHa;AAIvBC,EAAAA,SAAS,EAAE,CAACF,WAAD,EAA2BC,OAA3B,KACTH,QAAQ,CAACE,WAAD,EAAcC,OAAd;AALa,CAAlB;AAQP,OAAO,MAAME,gBAAkC,GAAGP,SAA3C","sourcesContent":["import type {LoaderWithParser} from '@loaders.gl/loader-utils';\nimport type {LASLoaderOptions} from './las-loader';\nimport {LASLoader as LASWorkerLoader} from './las-loader';\nimport parseLAS from './lib/parse-las';\n\n// LASLoader\n\nexport type {LASLoaderOptions};\nexport {LASWorkerLoader};\n\n/**\n * Loader for the LAS (LASer) point cloud format\n */\nexport const LASLoader = {\n  ...LASWorkerLoader,\n  parse: async (arrayBuffer: ArrayBuffer, options?: LASLoaderOptions) =>\n    parseLAS(arrayBuffer, options),\n  parseSync: (arrayBuffer: ArrayBuffer, options?: LASLoaderOptions) =>\n    parseLAS(arrayBuffer, options)\n};\n\nexport const _typecheckLoader: LoaderWithParser = LASLoader;\n"],"file":"index.js"}